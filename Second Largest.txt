Given an array arr, return the second largest distinct element from an array. If the second largest element doesn't exist then return -1.

Examples:

Input: arr = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr = [10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist so answer is -1.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
2 ≤ arr.size() ≤ 105
1 ≤ arri ≤ 105

code in java:
class Solution {
    public int print2largest(int[] arr) {
    
    int sec=0;
    int count=0;
    int n=arr.length;
    Arrays.sort(arr);
    
        for (int i = 0; i < n / 2; i++) {
            int temp = arr[i];
            arr[i] = arr[n - i - 1];
            arr[n - i - 1] = temp;
        }    
        
    if(n==1)
        return -1;
    else if(n==2 && arr[0] == arr[1])
    {
        return -1;
    }
    for(int i=1;i<n;i++)
    {
        int o=arr[0];
        if(o!=arr[i])
        {
            return arr[i];
        }
    }
    
    return 0;
    }
}