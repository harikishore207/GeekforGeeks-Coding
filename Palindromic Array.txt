Given an array arr[] of positive integers. Return true if all the array elements are palindrome otherwise, return false.

Examples:

Input: arr[] = [111, 222, 333, 444, 555]
Output: true
Explanation:
arr[0] = 111, which is a palindrome number.
arr[1] = 222, which is a palindrome number.
arr[2] = 333, which is a palindrome number.
arr[3] = 444, which is a palindrome number.
arr[4] = 555, which is a palindrome number.
As all numbers are palindrome so This will return true.
Input: arr[] = [121, 131, 20]
Output: false
Explanation: 20 is not a palindrome hence the output is false.
Expected Time Complexity: O(nlogn)
Expected Space Complexity: O(1)

Constraints:
1 <=arr.size<= 20
1 <=arr[i]<= 105


code in java:

class Solution {
    public static boolean palinArray(int[] arr) {
        // add code here.
        for(int i=0;i<arr.length;i++)
        {
            boolean ans=p(arr[i]);
            if(ans==false)
            {
                return false;
            }
        }
        return true;
    }
    
    public static boolean p(int N)
    {
        String s=""+N;
        int l=s.length();
        for(int i=0;i<l/2;i++)
        {
            if(s.charAt(i) != s.charAt(l-1-i))
            {
                return false;
            }
        }
         return true;
    }
}